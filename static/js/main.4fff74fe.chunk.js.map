{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoInfo","todo","handleTodoSelect","selectedTodo","id","title","completed","className","classNames","type","onClick","TodoList","todos","map","TodoFilter","query","handleQuatyChange","filterBy","handleFilteredBy","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onHideModal","useState","currentUser","setCurrentUser","loadUser","a","userId","user","useEffect","href","email","name","App","setTodos","isLoad","setIsLoad","setQuery","setFilterBy","setSelectedTodo","loadTodosData","todosData","filteredTodos","filter","toLowerCase","includes","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fff74fe.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  handleTodoSelect: (todo: Todo) => void\n  selectedTodo: Todo | null,\n};\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo,\n  handleTodoSelect,\n  selectedTodo,\n}) => {\n  const {\n    id,\n    title,\n    completed,\n  } = todo;\n\n  return (\n\n    <tr data-cy=\"todo\" className=\"\" key={id}>\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p\n          className={classNames(\n            completed ? 'has-text-success' : 'has-text-danger',\n          )}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => (\n            handleTodoSelect(todo)\n          )}\n        >\n          <span className=\"icon\">\n            {selectedTodo?.id !== todo.id ? (\n              <i className=\"far fa-eye\" />\n            ) : (\n              <i className=\"far fa-eye-slash\" />\n\n            )}\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n  handleTodoSelect: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleTodoSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {todos.map((todo) => {\n        return (\n          <TodoInfo\n            todo={todo}\n            key={todo.id}\n            handleTodoSelect={handleTodoSelect}\n            selectedTodo={selectedTodo}\n          />\n        );\n      })}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string,\n  handleQuatyChange: (event: string) => void,\n  filterBy: string,\n  handleFilteredBy: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query, handleQuatyChange, filterBy, handleFilteredBy,\n}) => {\n  const onSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    handleFilteredBy(value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={onSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={query}\n          placeholder=\"Search...\"\n          onChange={(event) => handleQuatyChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => handleQuatyChange('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nexport function wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nexport function get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo,\n  onHideModal: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onHideModal }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  const loadUser = async () => {\n    if (todo.userId) {\n      const user = await getUser(todo.userId);\n\n      setCurrentUser(user);\n    }\n  };\n\n  useEffect(() => {\n    loadUser();\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      { !currentUser ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onHideModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${currentUser.email}`}>\n                {currentUser.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\n\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [query, setQuery] = useState('');\n  const [filterBy, setFilterBy] = useState('all');\n\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  const loadTodosData = async () => {\n    const todosData = await getTodos();\n\n    setIsLoad(true);\n    setTodos(todosData);\n  };\n\n  const filteredTodos = todos.filter((todo: Todo) => todo.title.toLowerCase().includes(query.toLowerCase()));\n  let visibleTodos = filteredTodos;\n\n  const setVisibleTodos = () => {\n    visibleTodos = filteredTodos.filter((todo) => {\n      switch (filterBy) {\n        case 'all':\n          return todo;\n        case 'completed':\n          return todo.completed;\n\n        case 'active':\n          return !todo.completed;\n\n        default:\n          return [];\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadTodosData();\n  }, [visibleTodos]);\n\n  const onHideModal = () => {\n    setSelectedTodo(null);\n  };\n\n  setVisibleTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleQuatyChange={setQuery}\n                filterBy={filterBy}\n                handleFilteredBy={setFilterBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoad ? (\n                <Loader />\n              ) : (\n                <TodoList todos={visibleTodos} handleTodoSelect={setSelectedTodo} selectedTodo={selectedTodo} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} onHideModal={onHideModal} />\n      )}\n    </>\n\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}